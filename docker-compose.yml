services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      - redis
    environment:
      # App Configuration
      APP_PORT: ${APP_PORT:-8080}
      APP_ENV: ${APP_ENV:-dev}
      CORS_ORIGINS: ${CORS_ORIGINS:-http://localhost:3000,http://localhost:3001}
      
      # MySQL Configuration
      MYSQL_DATABASE: ${MYSQL_DATABASE:-tachos}
      MYSQL_USER: ${MYSQL_USER:-root}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_PORT: ${MYSQL_PORT:-3306}
      
      # Neo4j Configuration
      NEO4J_URI: ${NEO4J_URI}
      NEO4J_USERNAME: ${NEO4J_USERNAME:-neo4j}
      NEO4J_PASSWORD: ${NEO4J_PASSWORD}
      NEO4J_DATABASE: ${NEO4J_DATABASE:-neo4j}
      
      # JWT Configuration
      JWT_ACCESS_SECRET: ${JWT_ACCESS_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      JWT_ACCESS_TTL_MIN: ${JWT_ACCESS_TTL_MIN:-15}
      JWT_REFRESH_TTL_H: ${JWT_REFRESH_TTL_H:-168}
      RATE_LIMIT_RPS: 10
      
      # Redis Configuration
      REDIS_URL: ${REDIS_URL:-redis://redis:6379}
      
      # Server Configuration
      PORT: ${PORT:-8080}
      
      # Swagger Configuration
      SWAGGER_HOST: ${SWAGGER_HOST:-localhost:8080}
      SWAGGER_SCHEME: ${SWAGGER_SCHEME:-http}

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-integracion
    ports:
      - "9090:9090"
    volumes:
      - ../prometheus-integracion-app/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=15d'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.external-url=http://localhost:9090'
    environment:
      - GRAFANA_USERNAME=${GRAFANA_USERNAME}
      - GRAFANA_PASSWORD=${GRAFANA_PASSWORD}
    restart: unless-stopped
    depends_on:
      - api

volumes:
  redis_data:
  prometheus_data:
