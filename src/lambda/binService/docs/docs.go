// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/enviar-emergencia": {
            "post": {
                "description": "Registra una nueva emergencia en el sistema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Emergencias"
                ],
                "summary": "Enviar emergencia",
                "parameters": [
                    {
                        "description": "Datos de la emergencia",
                        "name": "emergencia",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.RequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Emergencia enviada correctamente",
                        "schema": {
                            "$ref": "#/definitions/handlers.ResponseBody"
                        }
                    },
                    "400": {
                        "description": "Datos inválidos",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/ruta-optima/{zonaID}": {
            "get": {
                "description": "Devuelve la ruta óptima y distancias para una zona específica",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rutas"
                ],
                "summary": "Obtener ruta óptima",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la zona",
                        "name": "zonaID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de puntos con distancias",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "400": {
                        "description": "zonaID inválido",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.RequestBody": {
            "type": "object",
            "properties": {
                "descripcion": {
                    "type": "string",
                    "example": "Incendio en edificio de oficinas"
                },
                "tipo": {
                    "type": "string",
                    "example": "incendio"
                }
            }
        },
        "handlers.ResponseBody": {
            "type": "object",
            "properties": {
                "descripcion": {
                    "type": "string",
                    "example": "Incendio en edificio de oficinas"
                },
                "message": {
                    "type": "string",
                    "example": "Emergencia enviada correctamente"
                },
                "tipo": {
                    "type": "string",
                    "example": "incendio"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "IntegracionDeAplicaciones2 API",
	Description:      "API para gestión de rutas y emergencias",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
