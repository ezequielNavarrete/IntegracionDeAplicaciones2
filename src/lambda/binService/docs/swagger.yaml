basePath: /
definitions:
  handlers.PersonaResponse:
    properties:
      camion_id:
        type: string
      id:
        type: string
      zona_id:
        type: string
    type: object
  handlers.RequestBody:
    properties:
      descripcion:
        example: Incendio en edificio de oficinas
        type: string
      tipo:
        example: incendio
        type: string
    type: object
  handlers.ResponseBody:
    properties:
      descripcion:
        example: Incendio en edificio de oficinas
        type: string
      message:
        example: Emergencia enviada correctamente
        type: string
      tipo:
        example: incendio
        type: string
    type: object
  handlers.UpdateCapacidadRequest:
    properties:
      capacidad:
        example: 90
        type: number
    type: object
  handlers.UpdateCapacidadResponse:
    properties:
      capacidad:
        example: 90
        type: number
      id_tacho:
        example: 1
        type: integer
      message:
        example: Capacidad actualizada correctamente
        type: string
    type: object
  handlers.UpdatePrioridadRequest:
    properties:
      prioridad:
        example: 2
        type: integer
    type: object
  handlers.UpdatePrioridadResponse:
    properties:
      id_neo:
        type: string
      id_tacho:
        type: integer
      message:
        type: string
      prioridad:
        type: integer
    type: object
  services.CreateTachoRequest:
    properties:
      barrio:
        description: Datos para Neo4j
        type: string
      capacidad:
        type: number
      direccion:
        type: string
      id_estado:
        type: integer
      id_tipo:
        description: Datos para MySQL
        type: integer
      latitude:
        type: number
      longitude:
        type: number
      prioridad:
        type: integer
    type: object
  services.CreateTachoResponse:
    properties:
      message:
        type: string
      neo_node_id:
        type: string
      tacho_id:
        type: integer
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: API para gestión de rutas y emergencias
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: IntegracionDeAplicaciones2 API
  version: "1.0"
paths:
  /enviar-emergencia:
    post:
      consumes:
      - application/json
      description: Registra una nueva emergencia en el sistema
      parameters:
      - description: Datos de la emergencia
        in: body
        name: emergencia
        required: true
        schema:
          $ref: '#/definitions/handlers.RequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: Emergencia enviada correctamente
          schema:
            $ref: '#/definitions/handlers.ResponseBody'
        "400":
          description: Datos inválidos
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Enviar emergencia
      tags:
      - Emergencias
  /personas:
    get:
      consumes:
      - application/json
      description: Devuelve la lista completa de personas con sus asignaciones
      produces:
      - application/json
      responses:
        "200":
          description: Lista de personas
          schema:
            items:
              $ref: '#/definitions/handlers.PersonaResponse'
            type: array
        "500":
          description: Error interno del servidor
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Obtener todas las personas
      tags:
      - Personas
  /personas/{id}:
    get:
      consumes:
      - application/json
      description: Devuelve los datos de una persona específica
      parameters:
      - description: ID de la persona
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Datos de la persona
          schema:
            $ref: '#/definitions/handlers.PersonaResponse'
        "404":
          description: Persona no encontrada
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Error interno del servidor
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Obtener persona por ID
      tags:
      - Personas
  /personas/zona/{zona}:
    get:
      consumes:
      - application/json
      description: Devuelve todas las personas asignadas a una zona específica
      parameters:
      - description: Número de zona
        in: path
        name: zona
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Personas de la zona
          schema:
            items:
              $ref: '#/definitions/handlers.PersonaResponse'
            type: array
        "500":
          description: Error interno del servidor
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Obtener personas por zona
      tags:
      - Personas
  /ruta-optima:
    get:
      consumes:
      - application/json
      description: Devuelve la ruta óptima y distancias para la zona de la persona
        asociada al email
      parameters:
      - description: email del usuario
        in: header
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Lista de puntos con distancias
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "400":
          description: Email faltante o inválido
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Usuario o persona no encontrada
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Error interno del servidor
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Obtener ruta óptima por email
      tags:
      - Rutas
  /ruta-optima/{zonaID}:
    get:
      consumes:
      - application/json
      description: Devuelve la ruta óptima y distancias para una zona específica
      parameters:
      - description: ID de la zona
        in: path
        name: zonaID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Lista de puntos con distancias
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "400":
          description: zonaID inválido
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Error interno del servidor
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Obtener ruta óptima
      tags:
      - Rutas
  /tachos:
    delete:
      consumes:
      - application/json
      description: Elimina un tacho tanto de MySQL como de Neo4j usando query parameters
        (custom_id O direccion+barrio)
      parameters:
      - description: ID personalizado del tacho (direccion|barrio)
        in: query
        name: custom_id
        type: string
      - description: Dirección del tacho (requiere también barrio)
        in: query
        name: direccion
        type: string
      - description: Barrio del tacho (requerido si se pasa direccion)
        in: query
        name: barrio
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Tacho eliminado exitosamente
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Parámetros inválidos
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Tacho no encontrado en ninguna base
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Error interno del servidor
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Eliminar un tacho
      tags:
      - Tachos
    post:
      consumes:
      - application/json
      description: Crea un tacho guardándolo tanto en MySQL como en Neo4j
      parameters:
      - description: Datos del tacho a crear
        in: body
        name: tacho
        required: true
        schema:
          $ref: '#/definitions/services.CreateTachoRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Tacho creado exitosamente
          schema:
            $ref: '#/definitions/services.CreateTachoResponse'
        "400":
          description: Datos de entrada inválidos
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Error interno del servidor
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Crear un nuevo tacho
      tags:
      - Tachos
  /tachos/{id_tacho}/prioridad:
    put:
      consumes:
      - application/json
      description: Actualiza el campo prioridad de un tacho en Neo4j
      parameters:
      - description: ID del tacho
        in: path
        name: id_tacho
        required: true
        type: integer
      - description: Nueva prioridad del tacho
        in: body
        name: prioridad
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdatePrioridadRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Prioridad actualizada correctamente
          schema:
            $ref: '#/definitions/handlers.UpdatePrioridadResponse'
        "400":
          description: Datos inválidos
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Error interno
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Actualizar prioridad del tacho
      tags:
      - Tachos
  /tachos/{id}/capacidad:
    put:
      consumes:
      - application/json
      description: Actualiza el campo capacidad de un tacho en MySQL
      parameters:
      - description: ID del tacho
        in: path
        name: id
        required: true
        type: integer
      - description: Nueva capacidad del tacho
        in: body
        name: capacidad
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateCapacidadRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Capacidad actualizada correctamente
          schema:
            $ref: '#/definitions/handlers.UpdateCapacidadResponse'
        "400":
          description: Datos inválidos
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Error interno
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Actualizar capacidad del tacho
      tags:
      - Tachos
swagger: "2.0"
